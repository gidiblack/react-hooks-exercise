{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIDEON\\\\Desktop\\\\Web Projects\\\\React\\\\conference\\\\src\\\\Speakers.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext, useReducer, useCallback } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../public/static/site.css\";\nimport { Header } from '../src/Header';\nimport { Menu } from '../src/Menu';\nimport SpeakerData from './SpeakerData';\nimport SpeakerDetail from './SpeakerDetail';\nimport { configContext } from './App';\n\nconst Speakers = ({}) => {\n  // useState calls for checkboxes and loading\n  const {\n    0: speakingSaturday,\n    1: setSpeakingSaturday\n  } = useState(true);\n  const {\n    0: speakingSunday,\n    1: setSpeakingSunday\n  } = useState(true); // reducer function that takes 2 parameters - previous state and action - then returns a new state\n\n  function SpeakersReducer(state, action) {\n    // function to update favorite speaker button\n    function updateFavorite(favoriteValue) {\n      return state.map((item, index) => {\n        if (item.id === action.sessionId) {\n          item.favorite = favoriteValue;\n          return item;\n        }\n\n        return item;\n      });\n    } // switch statement based on parsed in action type - if action type in \"case\" returns true, set action.data\n\n\n    switch (action.type) {\n      case \"setSpeakerList\":\n        {\n          return action.data;\n        }\n\n      case \"favorite\":\n        {\n          return updateFavorite(true);\n        }\n\n      case \"unfavorite\":\n        {\n          return updateFavorite(false);\n        }\n      //\n\n      default:\n        return state;\n    }\n  } // \"dispatch\" is just a name that can be anything just so a second parameter (method) can be parsed into useReducer hook\n\n\n  const {\n    0: speakerList,\n    1: dispatch\n  } = useReducer(SpeakersReducer, []);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true); // reference shared context with useContext hook\n\n  const context = useContext(configContext); // useEffect call that simulates calling an outside service with a 1s delay then filters and sorts data on completion\n\n  useEffect(() => {\n    setIsLoading(true);\n    new Promise(function (resolve) {\n      setTimeout(function () {\n        resolve();\n      }, 1000);\n    }).then(() => {\n      setIsLoading(false);\n      const speakerListServerFilter = SpeakerData.filter(({\n        sat,\n        sun\n      }) => {\n        return speakingSaturday && sat || speakingSunday && sun;\n      }); // call dispatch to set speaker list and data to be used by reducer above\n\n      dispatch({\n        type: \"setSpeakerList\",\n        data: speakerListServerFilter\n      });\n    });\n    return () => {\n      console.log('cleanup');\n    };\n  }, []); // [speakingSunday, speakingSaturday]);\n\n  const handleChangeSaturday = () => {\n    setSpeakingSaturday(!speakingSaturday);\n  };\n\n  const speakerListFiltered = isLoading ? [] : speakerList.filter(({\n    sat,\n    sun\n  }) => speakingSaturday && sat || speakingSunday && sun).sort(function (a, b) {\n    if (a.firstName < b.firstName) {\n      return -1;\n    }\n\n    if (a.firstName > b.firstName) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  const handleChangeSunday = () => {\n    setSpeakingSunday(!speakingSunday);\n  }; // call useCallback to memoize this function so that it doesn't rerender all components on every change\n\n\n  const heartFavoriteHandler = useCallback((e, favoriteValue) => {\n    e.preventDefault();\n    const sessionId = parseInt(e.target.attributes['data-sessionid'].value); // call dispatch to set favorite value on reducer\n\n    dispatch({\n      type: favoriteValue === true ? \"favorite\" : \"unfavorite\",\n      sessionId\n    });\n  }, []);\n  if (isLoading) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), __jsx(Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"btn-toolbar margintopbottom5 checkbox-bigger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, context.showSpeakerSpeakingDays === false ? null : __jsx(\"div\", {\n    className: \"hide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSaturday,\n    checked: speakingSaturday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }), \"Saturday Speakers\")), __jsx(\"div\", {\n    className: \"form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, __jsx(\"label\", {\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSunday,\n    checked: speakingSunday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }), \"Sunday Speakers\"))), \";\"), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"card-deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, speakerListFiltered.map(({\n    id,\n    firstName,\n    lastName,\n    bio,\n    favorite\n  }) => {\n    return __jsx(SpeakerDetail, {\n      key: id,\n      id: id,\n      favorite: favorite,\n      onHeartFavoriteHandler: heartFavoriteHandler,\n      firstName: firstName,\n      lastName: lastName,\n      bio: bio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    });\n  })))));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/GIDEON/Desktop/Web Projects/React/conference/src/Speakers.js"],"names":["React","useEffect","useState","useContext","useReducer","useCallback","Header","Menu","SpeakerData","SpeakerDetail","configContext","Speakers","speakingSaturday","setSpeakingSaturday","speakingSunday","setSpeakingSunday","SpeakersReducer","state","action","updateFavorite","favoriteValue","map","item","index","id","sessionId","favorite","type","data","speakerList","dispatch","isLoading","setIsLoading","context","Promise","resolve","setTimeout","then","speakerListServerFilter","filter","sat","sun","console","log","handleChangeSaturday","speakerListFiltered","sort","a","b","firstName","handleChangeSunday","heartFavoriteHandler","e","preventDefault","parseInt","target","attributes","value","showSpeakerSpeakingDays","lastName","bio"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, useReducer, useCallback } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../public/static/site.css\";\nimport { Header } from '../src/Header';\nimport { Menu } from '../src/Menu';\nimport SpeakerData from './SpeakerData';\nimport SpeakerDetail from './SpeakerDetail';\nimport { configContext } from './App';\n\nconst Speakers = ({}) => {\n  // useState calls for checkboxes and loading\n  const [speakingSaturday, setSpeakingSaturday] = useState(true);\n  const [speakingSunday, setSpeakingSunday] = useState(true);\n\n  // reducer function that takes 2 parameters - previous state and action - then returns a new state\n  function SpeakersReducer (state, action){\n    // function to update favorite speaker button\n    function updateFavorite(favoriteValue){\n      return state.map((item, index) => {\n        if (item.id === action.sessionId){\n          item.favorite = favoriteValue;\n          return item;\n        }\n        return item;\n      });\n    }\n\n    // switch statement based on parsed in action type - if action type in \"case\" returns true, set action.data\n    switch (action.type) {\n      case \"setSpeakerList\" : {\n        return action.data;\n      }\n      case \"favorite\" : {\n        return updateFavorite(true);\n      }\n      case \"unfavorite\" : {\n        return updateFavorite(false);\n      }\n      //\n      default:\n        return state;\n    }\n  }\n  // \"dispatch\" is just a name that can be anything just so a second parameter (method) can be parsed into useReducer hook\n  const [speakerList, dispatch] = useReducer(SpeakersReducer, []);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // reference shared context with useContext hook\n  const context = useContext(configContext);\n\n  // useEffect call that simulates calling an outside service with a 1s delay then filters and sorts data on completion\n  useEffect(() => {\n    setIsLoading(true);\n    new Promise(function (resolve) {\n      setTimeout(function () {\n        resolve();\n      }, 1000);\n    }).then(() => {\n      setIsLoading(false);\n      const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\n        return (speakingSaturday && sat) || (speakingSunday && sun);\n      });\n      // call dispatch to set speaker list and data to be used by reducer above\n      dispatch({\n        type: \"setSpeakerList\",\n        data: speakerListServerFilter\n      });\n    });\n    return () => {\n      console.log('cleanup');\n    };\n  }, []); // [speakingSunday, speakingSaturday]);\n\n  const handleChangeSaturday = () => {\n    setSpeakingSaturday(!speakingSaturday);\n  };\n\n  const speakerListFiltered = isLoading\n    ? []\n    : speakerList\n        .filter(\n          ({ sat, sun }) =>\n            (speakingSaturday && sat) || (speakingSunday && sun),\n        )\n        .sort(function (a, b) {\n          if (a.firstName < b.firstName) {\n            return -1;\n          }\n          if (a.firstName > b.firstName) {\n            return 1;\n          }\n          return 0;\n        });\n\n  const handleChangeSunday = () => {\n    setSpeakingSunday(!speakingSunday);\n  };\n  // call useCallback to memoize this function so that it doesn't rerender all components on every change\n  const heartFavoriteHandler = useCallback((e, favoriteValue) => {\n    e.preventDefault();\n    const sessionId = parseInt(e.target.attributes['data-sessionid'].value);\n    // call dispatch to set favorite value on reducer\n    dispatch({\n      type: favoriteValue === true ? \"favorite\" : \"unfavorite\",\n      sessionId\n    });\n  }, []);\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <Header />\n      <Menu />\n      <div className=\"container\">\n        <div className=\"btn-toolbar margintopbottom5 checkbox-bigger\">\n          {/* check context of showSpeakerSpeakingDays before displaying the checkboxes */}\n          {context.showSpeakerSpeakingDays === false ? null : (\n            <div className=\"hide\">\n              <div className=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    onChange={handleChangeSaturday}\n                    checked={speakingSaturday}\n                  />\n                  Saturday Speakers\n                </label>\n              </div>\n              <div className=\"form-check-inline\">\n                <label className=\"form-check-label\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    onChange={handleChangeSunday}\n                    checked={speakingSunday}\n                  />\n                  Sunday Speakers\n                </label>\n              </div>\n            </div>\n          )};\n        </div>\n        <div className=\"row\">\n          <div className=\"card-deck\">\n            {speakerListFiltered.map(\n              ({ id, firstName, lastName, bio, favorite }) => {\n                return (\n                  <SpeakerDetail\n                    key={id}\n                    id={id}\n                    favorite={favorite}\n                    onHeartFavoriteHandler={heartFavoriteHandler}\n                    firstName={firstName}\n                    lastName={lastName}\n                    bio={bio}\n                  />\n                );\n              },\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Speakers;\n"]},"metadata":{},"sourceType":"module"}