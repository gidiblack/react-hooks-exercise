{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GIDEON\\\\Desktop\\\\Web Projects\\\\React\\\\conference\\\\src\\\\EmailValidatingForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useReducer, useState } from 'react';\nimport useInterval from './useInterval';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../public/static/site.css\";\n\nfunction EmailValidatingForm() {\n  _s();\n\n  var validateEmail = function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n\n  var _useState = useState(false),\n      emailValid = _useState[0],\n      setEmailValid = _useState[1];\n\n  var emailReducer = function emailReducer(state, action) {\n    var isValidEmail = validateEmail(action);\n    setEmailValid(isValidEmail);\n    return action;\n  };\n\n  var _useReducer = useReducer(emailReducer, ''),\n      email = _useReducer[0],\n      setEmail = _useReducer[1];\n\n  var maxSeconds = 30;\n\n  var _useState2 = useState(maxSeconds),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  useInterval(function () {\n    setCount(count - 1);\n  }, count > 0 ? 1000 : null);\n  return __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    onChange: function onChange(e) {\n      setEmail(e.target.value);\n    },\n    disabled: count <= 0,\n    value: email,\n    placeholder: \"Enter Email\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), \"\\xA0\\xA0\\xA0\", __jsx(\"button\", {\n    disabled: !emailValid || count <= 0,\n    onClick: function onClick() {\n      setCount(0);\n      alert(\"button clicked with email \".concat(email));\n    },\n    className: \"btn-lg\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"PRESS ME!\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, count > 0 ? \"You Have \".concat(count, \" Seconds To Enter Your Email\") : 'Email Entered or Time Expired'))));\n}\n\n_s(EmailValidatingForm, \"Fk/UAhbN+NYeUpW8RgVunOxHsao=\", false, function () {\n  return [useInterval];\n});\n\n_c = EmailValidatingForm;\nexport default EmailValidatingForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailValidatingForm\");","map":{"version":3,"sources":["C:/Users/GIDEON/Desktop/Web Projects/React/conference/src/EmailValidatingForm.js"],"names":["useReducer","useState","useInterval","EmailValidatingForm","validateEmail","email","re","test","emailValid","setEmailValid","emailReducer","state","action","isValidEmail","setEmail","maxSeconds","count","setCount","e","target","value","alert"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,sCAAP;AACA,OAAO,2BAAP;;AAEA,SAASC,mBAAT,GAA+B;AAAA;;AAC7B,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,QAAMC,EAAE,GAAG,2JAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP;AACD,GAHD;;AAD6B,kBAKOJ,QAAQ,CAAC,KAAD,CALf;AAAA,MAKtBO,UALsB;AAAA,MAKVC,aALU;;AAM7B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtC,QAAMC,YAAY,GAAGT,aAAa,CAACQ,MAAD,CAAlC;AACAH,IAAAA,aAAa,CAACI,YAAD,CAAb;AACA,WAAOD,MAAP;AACD,GAJD;;AAN6B,oBAYHZ,UAAU,CAACU,YAAD,EAAe,EAAf,CAZP;AAAA,MAYtBL,KAZsB;AAAA,MAYfS,QAZe;;AAa7B,MAAMC,UAAU,GAAG,EAAnB;;AAb6B,mBAcHd,QAAQ,CAACc,UAAD,CAdL;AAAA,MActBC,KAdsB;AAAA,MAcfC,QAde;;AAgB7Bf,EAAAA,WAAW,CAAC,YAAM;AAChBe,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFU,EAERA,KAAK,GAAG,CAAR,GAAY,IAAZ,GAAmB,IAFX,CAAX;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,kBAACE,CAAD,EAAO;AACfJ,MAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,KAHH;AAIE,IAAA,QAAQ,EAAEJ,KAAK,IAAI,CAJrB;AAKE,IAAA,KAAK,EAAEX,KALT;AAME,IAAA,WAAW,EAAC,aANd;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,IAAI,EAAC,OARP;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,kBAaE;AACE,IAAA,QAAQ,EAAE,CAACG,UAAD,IAAeQ,KAAK,IAAI,CADpC;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACAI,MAAAA,KAAK,qCAA8BhB,KAA9B,EAAL;AACD,KALH;AAME,IAAA,SAAS,EAAC,QANZ;AAOE,IAAA,IAAI,EAAC,QAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAbF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,KAAK,GAAG,CAAR,sBACeA,KADf,oCAEG,+BAHN,CAxBF,CADF,CAFF,CADF;AAqCD;;GAzDQb,mB;UAgBPD,W;;;KAhBOC,mB;AA0DT,eAAeA,mBAAf","sourcesContent":["import { useReducer, useState } from 'react';\nimport useInterval from './useInterval';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../public/static/site.css\";\n\nfunction EmailValidatingForm() {\n  const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n  const [emailValid, setEmailValid] = useState(false);\n  const emailReducer = (state, action) => {\n    const isValidEmail = validateEmail(action);\n    setEmailValid(isValidEmail);\n    return action;\n  };\n\n  const [email, setEmail] = useReducer(emailReducer, '');\n  const maxSeconds = 30;\n  const [count, setCount] = useState(maxSeconds);\n\n  useInterval(() => {\n    setCount(count - 1);\n  }, count > 0 ? 1000 : null);\n\n  return (\n    <div className=\"container\">\n      <br />\n      <div>\n        <div className=\"content\">\n          <input\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            disabled={count <= 0}\n            value={email}\n            placeholder=\"Enter Email\"\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n          &nbsp;&nbsp;&nbsp;\n          <button\n            disabled={!emailValid || count <= 0}\n            onClick={() => {\n              setCount(0);\n              alert(`button clicked with email ${email}`);\n            }}\n            className=\"btn-lg\"\n            type=\"submit\"\n          >\n            PRESS ME!\n          </button>\n          <div>\n            {count > 0\n              ? `You Have ${count} Seconds To Enter Your Email`\n              : 'Email Entered or Time Expired'}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default EmailValidatingForm;\n"]},"metadata":{},"sourceType":"module"}