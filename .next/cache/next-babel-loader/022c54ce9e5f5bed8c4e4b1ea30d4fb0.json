{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\GIDEON\\\\Desktop\\\\Web Projects\\\\React\\\\conference\\\\src\\\\SpeakerDetail.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport ImageToggleOnScroll from './ImageToggleOnScroll'; // parse in variables to store speaker details (data) as parameters\n// wrap speaker detail with React.memo to memoize(cache) the data speaker detail is returning - this is different from useMemo hook\n\nvar SpeakerDetail = React.memo(_c = function _c(_ref) {\n  var id = _ref.id,\n      firstName = _ref.firstName,\n      lastName = _ref.lastName,\n      favorite = _ref.favorite,\n      bio = _ref.bio,\n      onHeartFavoriteHandler = _ref.onHeartFavoriteHandler;\n  // method to return html and insert data\n  //console.log(`SpeakerDetail:${id} ${firstName} ${lastName} ${favorite}`);\n  return __jsx(\"div\", {\n    className: \"card col-4 cardmin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(ImageToggleOnScroll, {\n    className: \"card-img-top\",\n    primaryImg: \"/static/speakers/bw/Speaker-\".concat(id, \".jpg\"),\n    secondaryImg: \"/static/speakers/Speaker-\".concat(id, \".jpg\"),\n    alt: \"{firstName} {lastName}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"h4\", {\n    className: \"card-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    \"data-sessionid\": id,\n    className: favorite ? 'heartredbutton' : 'heartdarkbutton',\n    onClick: function onClick(e) {\n      onHeartFavoriteHandler(e, !favorite);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, firstName, \" \", lastName)), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, bio)));\n});\n_c2 = SpeakerDetail;\nexport default SpeakerDetail;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SpeakerDetail$React.memo\");\n$RefreshReg$(_c2, \"SpeakerDetail\");","map":{"version":3,"sources":["C:/Users/GIDEON/Desktop/Web Projects/React/conference/src/SpeakerDetail.js"],"names":["ImageToggleOnScroll","SpeakerDetail","React","memo","id","firstName","lastName","favorite","bio","onHeartFavoriteHandler","e"],"mappings":";;;;;AAAA,OAAOA,mBAAP,MAAgC,uBAAhC,C,CACA;AACA;;AACA,IAAMC,aAAa,GAAGC,KAAK,CAACC,IAAN,MAAY,kBAO1B;AAAA,MANNC,EAMM,QANNA,EAMM;AAAA,MALNC,SAKM,QALNA,SAKM;AAAA,MAJNC,QAIM,QAJNA,QAIM;AAAA,MAHNC,QAGM,QAHNA,QAGM;AAAA,MAFNC,GAEM,QAFNA,GAEM;AAAA,MADNC,sBACM,QADNA,sBACM;AAAE;AACN;AACA,SACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,UAAU,wCAAiCL,EAAjC,SAFZ;AAGE,IAAA,YAAY,qCAA8BA,EAA9B,SAHd;AAIE,IAAA,GAAG,EAAC,wBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,sBAAgBA,EADlB;AAEE,IAAA,SAAS,EAAEG,QAAQ,GAAG,gBAAH,GAAsB,iBAF3C;AAGE,IAAA,OAAO,EAAE,iBAACG,CAAD,EAAO;AACdD,MAAAA,sBAAsB,CAACC,CAAD,EAAI,CAACH,QAAL,CAAtB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,SADH,OACeC,QADf,CARF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOE,GAAP,CAdF,CAPF,CADF;AA0BH,CAnCqB,CAAtB;MAAMP,a;AAqCN,eAAeA,aAAf","sourcesContent":["import ImageToggleOnScroll from './ImageToggleOnScroll';\n// parse in variables to store speaker details (data) as parameters\n// wrap speaker detail with React.memo to memoize(cache) the data speaker detail is returning - this is different from useMemo hook\nconst SpeakerDetail = React.memo( ({\n  id,\n  firstName,\n  lastName,\n  favorite,\n  bio,\n  onHeartFavoriteHandler,\n  }) => { // method to return html and insert data\n    //console.log(`SpeakerDetail:${id} ${firstName} ${lastName} ${favorite}`);\n    return (\n      <div className=\"card col-4 cardmin\">\n        <ImageToggleOnScroll\n          className=\"card-img-top\"\n          primaryImg={`/static/speakers/bw/Speaker-${id}.jpg`}\n          secondaryImg={`/static/speakers/Speaker-${id}.jpg`}\n          alt=\"{firstName} {lastName}\"\n        />\n        <div className=\"card-body\">\n          <h4 className=\"card-title\">\n            <button\n              data-sessionid={id}\n              className={favorite ? 'heartredbutton' : 'heartdarkbutton'}\n              onClick={(e) => {\n                onHeartFavoriteHandler(e, !favorite);\n              }}\n            />\n            <span>\n              {firstName} {lastName}\n            </span>\n          </h4>\n\n          <span>{bio}</span>\n        </div>\n      </div>\n    );\n});\n\nexport default SpeakerDetail;\n"]},"metadata":{},"sourceType":"module"}