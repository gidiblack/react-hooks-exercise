{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\GIDEON\\\\Desktop\\\\Web Projects\\\\React\\\\conference\\\\src\\\\App.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Home from './Home';\nimport Speakers from './Speakers'; // Context set up where all levels below will share this context with hooks\n\nexport var ConfigContext = React.createContext();\n\nvar pageToShow = function pageToShow(pageName) {\n  if (pageName === 'Home') return __jsx(Home, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 35\n    }\n  });\n  if (pageName === 'Speakers') return __jsx(Speakers, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 39\n    }\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }, \"Not Found\");\n}; // configValue object that can be accessed from any component below this tree\n\n\nvar configValue = {\n  showSpeakerSpeakingDays: true\n};\n\nvar App = function App(_ref) {\n  var pageName = _ref.pageName;\n  return (// wrap page to show with configContext.provider and parse attribute named \"value\" into provider which can be any JS object\n    __jsx(ConfigContext.Provider, {\n      value: configValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, pageToShow(pageName)))\n  );\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/GIDEON/Desktop/Web Projects/React/conference/src/App.js"],"names":["React","Home","Speakers","ConfigContext","createContext","pageToShow","pageName","configValue","showSpeakerSpeakingDays","App"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,OAAO,IAAMC,aAAa,GAAGH,KAAK,CAACI,aAAN,EAAtB;;AAEP,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC/B,MAAIA,QAAQ,KAAK,MAAjB,EAAyB,OAAO,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACzB,MAAIA,QAAQ,KAAK,UAAjB,EAA6B,OAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAC7B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD,CAJD,C,CAMA;;;AACA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,uBAAuB,EAAE;AADP,CAApB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAkB;AAAA,MAAfH,QAAe,QAAfA,QAAe;AAC5B,SACE;AACA,UAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAEC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,UAAU,CAACC,QAAD,CAAhB,CADF;AAFF;AAMD,CAPD;;KAAMG,G;AASN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport Home from './Home';\nimport Speakers from './Speakers';\n\n// Context set up where all levels below will share this context with hooks\nexport const ConfigContext = React.createContext();\n\nconst pageToShow = (pageName) => {\n  if (pageName === 'Home') return <Home />;\n  if (pageName === 'Speakers') return <Speakers />;\n  return <div>Not Found</div>;\n};\n\n// configValue object that can be accessed from any component below this tree\nconst configValue = {\n  showSpeakerSpeakingDays: true,\n};\n\nconst App = ({ pageName }) => {\n  return (\n    // wrap page to show with configContext.provider and parse attribute named \"value\" into provider which can be any JS object\n    <ConfigContext.Provider value={configValue}>\n      <div>{pageToShow(pageName)}</div>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}